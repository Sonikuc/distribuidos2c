kind: Template
apiVersion: v1
metadata:
  name: distribuidos2c
  annotations:
    description: >-
      Platilla de despliegue para distribuidos2c
    tags: "nodejs"
    openshift.io/documentation-url: "https://github.com/Sonikuc/distribuidos-3b"
    openshift.io/suport-url: "https://github.com/Sonikuc/distribuidos-3b"

parameters:
  - name: APP_NAME
    description: APP 2C Angely-Diego.
    required: true
  
  - name: DB_NAME
    description: Nombre de la base de datos.
    value: mongodb

  - name: DB_USR
    description: Nombre de usario para conexión a la base de datos.
    value: mongo

  - name: DB_PWD
    description: Password de usuario para conexión a la base de datos.
    required: true

  - name: DOMAIN_NAME
    description: Nombre de dominio para la publicación de la ruta.
    required: true

  - name: PROJECT_NAME
    description: Nombre de projecto
    required: true

labels:
  app: "${APP_NAME}"

objects:

  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-keys"
    type: Opaque
    stringData:
      db_pwd: '${DB_PWD}'
      db_usr: '${DB_USR}'
      db_name: '${DB_NAME}'

  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-appserver"
    spec:
      ports:
        - name: appserver
          port: 3000
          targetPort: 3000
      selector:
        name: "${APP_NAME}-appserver"
    
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}-appserver
      name: ${APP_NAME}-appserver
    spec:
      host: ${DOMAIN_NAME}
      port:
        targetPort: appserver
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-appserver
        weight: 100
      wildcardPolicy: None
  
  - apiVersion: v1
    kind: Service
    metadata:
      name: '${APP_NAME}-mongodb'
    spec:
      type: ClusterIP
      ports:
        - name: mongodb
          port: 27017
          protocol: TCP
          targetPort: 27017
      selector:
        name: mongodb

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: '${APP_NAME}-mongodb'
    spec:
      replicas: 1
      selector:
        name: ${APP_NAME}-mongodb
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: "${APP_NAME}-mongodb"
        spec:
          containers:
          - env:
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-keys"
                  key: db_usr
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-keys"
                  key: db_pwd
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-keys"
                  key: db_name
            image: 'mongo:4-focal'
            imagePullPolicy: Always
            name: mongodb
            ports:
            - containerPort: 27017
              protocol: TCP
            resources:
              limits:
                memory: "1G"
              requests:
                memory: "1G"
            volumeMounts:
            - mountPath: /data/db
              name: mongodb-data
              subPath: mongodb-data
            restartPolicy: Always
            securityContext:
              supplementalGroups:
              - 5688
          volumes:
          - name: mongodb-data
            persistentVolumeClaim:
              claimName: "data"
          test: false
          triggers:
          - imageChangeParams:
              automatic: true
              containerNames:
              - mongodb
              from:
                kind: ImageStreamTag
                name: mongodb
                namespace: openshift
              lastTriggeredImage: ''
            type: ImageChange
          - type: ConfigChange
  
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: "${APP_NAME}-appserver"
    spec:
      replicas: 1
      selector:
        name: "${APP_NAME}-appserver"
      template:
        metadata:
          labels:
            app: "${APP_NAME}-appserver"
            name: "${APP_NAME}-appserver"
        spec:
          containers:
          - image: 'sonikuc/distribuidos-3b'
            imagePullPolicy: Always
            name: appserver
            args:
            - server.js
            env:
            - name: PORT
              value: '3000'
            - name: APP_NAME
              value: "${APP_NAME}"
            - name: DB_NAME
              value: "${DB_NAME}"
            - name: PROJECT_NAME
              value: "${PROJECT_NAME}"
            ports:
            - containerPort: 3000
              protocol: TCP
            resources:
              limits:
                memory: "1G"
              requests:
                memory: "1G"
            restartPolicy: Always
      test: false